[package]
name = "rabbitmesh"
version = "0.1.1"
edition = "2024"
authors = ["RabbitMesh Team <rabbitmesh@example.com>"]
description = "Message-driven microservices framework using RabbitMQ for zero-port service mesh"
license = "MIT"
repository = "https://github.com/rabbitmesh/rabbitmesh"
homepage = "https://github.com/rabbitmesh/rabbitmesh"
documentation = "https://docs.rs/rabbitmesh"
keywords = ["microservices", "rabbitmq", "rpc", "async", "distributed"]
categories = ["network-programming", "asynchronous", "web-programming::http-server"]
readme = "../README.md"

[dependencies]
# Async runtime
tokio = { version = "1.0", features = ["full"] }
tokio-stream = "0.1"
futures-util = "0.3"

# AMQP client
lapin = "2.3"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Unique IDs  
uuid = { version = "1.0", features = ["v4", "serde"] }

# Async traits
async-trait = "0.1"

# Logging
tracing = "0.1"

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Time
chrono = { version = "0.4", features = ["serde"] }

# Proc macros
rabbitmesh-macros = { path = "../rabbitmesh-macros", version = "0.2.0" }

[dev-dependencies]
tokio-test = { workspace = true }
tracing-subscriber = { workspace = true }